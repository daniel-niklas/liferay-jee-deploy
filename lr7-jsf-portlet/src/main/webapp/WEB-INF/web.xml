<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<!-- in Liferay 7 this is used from wildfly for "servletContext.getServletContextName()" -->
	<display-name>lr7-jsf-portlet</display-name>

	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Production</param-value>
	</context-param>

	<context-param>
		<param-name>org.liferayext.portal.config.jeedeploy</param-name>
		<param-value>on</param-value>
	</context-param>

	<!-- JSF 2.2 now allows for composite components and resources to be hidden 
		under WEB-INF -->
	<context-param>
		<param-name>javax.faces.WEBAPP_RESOURCES_DIRECTORY</param-name>
		<param-value>/WEB-INF/resources</param-value>
	</context-param>

	<!-- Although the FacesServlet will not be invoked by any portlet requests, 
		it is required to initialize JSF. -->
	<servlet>
		<servlet-name>faces</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>faces</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>

	<security-constraint>
		<display-name>Prevent direct access to Facelet XHTML</display-name>
		<web-resource-collection>
			<web-resource-name>Facelet XHTML</web-resource-name>
			<url-pattern>*.xhtml</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>
</web-app>